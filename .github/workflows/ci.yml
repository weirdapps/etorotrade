name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-xdist flake8 mypy safety bandit

    - name: Security check with bandit
      run: |
        bandit -r yahoofinance/ trade_modules/ -f json -o bandit-report.json || true
        if [ -f bandit-report.json ]; then
          echo "Security scan completed. Check artifacts for details."
        fi

    - name: Safety check for vulnerabilities
      run: |
        safety check --json --output safety-report.json || true

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. Line length is relaxed to 100
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

    - name: Type check with mypy
      run: |
        mypy yahoofinance/ trade_modules/ --ignore-missing-imports --no-strict-optional || true

    - name: Run tests with pytest
      run: |
        # Run tests with coverage, excluding integration tests that require external APIs
        pytest tests/ \
          --cov=yahoofinance \
          --cov=trade_modules \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term \
          --cov-fail-under=60 \
          --maxfail=10 \
          -x \
          --ignore=tests/integration/ \
          --ignore=tests/e2e/ \
          -v

    - name: Run performance benchmarks
      run: |
        if [ -f "tests/debug/performance_summary.py" ]; then
          echo "Running performance benchmarks..."
          PYTHONPATH=. python tests/debug/performance_summary.py > performance-report.txt
          echo "Performance benchmark completed"
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive test results
      uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          htmlcov/
          bandit-report.json
          safety-report.json
          performance-report.txt
          coverage.xml

  integration:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Set up Python 3.11
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run integration tests
      run: |
        # Only run integration tests on main branch pushes
        # These may make actual API calls so we limit them
        pytest tests/integration/ -v --maxfail=3 || true

  quality-gates:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Set up Python 3.11
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install radon complexity-report

    - name: Check code complexity
      run: |
        radon cc yahoofinance/ trade_modules/ --min=B --show-complexity --average
        radon mi yahoofinance/ trade_modules/ --min=B --show

    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        grep -r "TODO\|FIXME\|HACK\|XXX" yahoofinance/ trade_modules/ --include="*.py" || echo "No TODO/FIXME comments found"

    - name: Validate imports and dependencies
      run: |
        python -c "
        import sys
        import importlib
        modules = ['yahoofinance', 'trade_modules']
        for module in modules:
            try:
                importlib.import_module(module)
                print(f'✅ {module} imports successfully')
            except Exception as e:
                print(f'❌ {module} import failed: {e}')
                sys.exit(1)
        "